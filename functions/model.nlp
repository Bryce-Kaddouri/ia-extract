{
  "settings": {
    "languages": [
      "en"
    ]
  },
  "nluManager": {
    "settings": {},
    "languages": [
      "en"
    ],
    "intentDomains": {},
    "domainManagers": {
      "en": {
        "settings": {
          "language": "en",
          "useNoneFeature": true,
          "config": {
            "activation": "leaky-relu",
            "hiddenLayers": [],
            "iterations": 20000,
            "learningRate": 0.7,
            "errorThresh": 0.00005,
            "momentum": 0.5,
            "deltaErrorThresh": 0.000001,
            "maxDecimals": 9,
            "leakyReluAlpha": 0.08,
            "timeout": 120000
          }
        },
        "language": "en",
        "nluClassName": "BrainNLU",
        "useMasterDomain": true,
        "trainByDomain": false,
        "keepStopwords": true,
        "stemDict": {},
        "intentDict": {},
        "useStemDict": true,
        "domains": {
          "master_domain": {
            "settings": {
              "language": "en",
              "useNoneFeature": true,
              "config": {
                "activation": "leaky-relu",
                "hiddenLayers": [],
                "iterations": 20000,
                "learningRate": 0.7,
                "errorThresh": 0.00005,
                "momentum": 0.5,
                "deltaErrorThresh": 0.000001,
                "maxDecimals": 9,
                "leakyReluAlpha": 0.08,
                "timeout": 120000
              }
            },
            "language": "en",
            "keepStopwords": true,
            "docs": [],
            "features": {},
            "isEditing": false,
            "className": "BrainNLU",
            "classifier": {
              "className": "BrainClassifier",
              "settings": {
                "language": "en",
                "useNoneFeature": true,
                "config": {
                  "activation": "leaky-relu",
                  "hiddenLayers": [],
                  "iterations": 20000,
                  "learningRate": 0.7,
                  "errorThresh": 0.00005,
                  "momentum": 0.5,
                  "deltaErrorThresh": 0.000001,
                  "maxDecimals": 9,
                  "leakyReluAlpha": 0.08,
                  "timeout": 120000
                }
              },
              "labels": [],
              "network": {
                "sizes": [
                  1,
                  1
                ],
                "layers": [
                  {
                    "nonefeature": {}
                  },
                  {
                    "None": {
                      "bias": 4.150278709,
                      "weights": {
                        "nonefeature": 8.289545059
                      }
                    }
                  }
                ],
                "trainOpts": {
                  "iterations": 20000,
                  "errorThresh": 0.00005,
                  "fixedError": false,
                  "deltaErrorThresh": 0.000001,
                  "learningRate": 0.7,
                  "momentum": 0.5,
                  "leakyReluAlpha": 0.08,
                  "maxDecimals": 9,
                  "log": false
                }
              }
            }
          }
        }
      }
    },
    "extraSentences": []
  },
  "nerManager": {
    "settings": {},
    "threshold": 0.8,
    "builtins": [
      "Number",
      "Ordinal",
      "Percentage",
      "Age",
      "Currency",
      "Dimension",
      "Temperature",
      "DateTime",
      "PhoneNumber",
      "IpAddress",
      "Boolean",
      "Email",
      "Hashtag",
      "URL"
    ],
    "namedEntities": {
      "company": {
        "type": "enum",
        "name": "company",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "Walmart": [
              "Walmart"
            ],
            "Target": [
              "Target"
            ],
            "Costco": [
              "Costco"
            ],
            "Kroger": [
              "Kroger"
            ],
            "Safeway": [
              "Safeway"
            ],
            "Whole Foods": [
              "Whole Foods"
            ],
            "Market Store": [
              "Market Store"
            ],
            "Akash Enterprises": [
              "Akash Enterprises"
            ]
          }
        }
      },
      "product": {
        "type": "enum",
        "name": "product",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "Apple normal": [
              "Apple normal"
            ],
            "Apple fresh": [
              "Apple fresh"
            ],
            "Green Apple": [
              "Green Apple"
            ],
            "Orange": [
              "Orange"
            ],
            "Mandarin": [
              "Mandarin"
            ],
            "Tangerine": [
              "Tangerine"
            ],
            "Banana": [
              "Banana"
            ],
            "Banana ripe": [
              "Banana ripe"
            ],
            "Plantain": [
              "Plantain"
            ],
            "Butter": [
              "Butter"
            ],
            "Margarine": [
              "Margarine"
            ],
            "Milk": [
              "Milk"
            ],
            "Soy Milk": [
              "Soy Milk"
            ],
            "Almond Milk": [
              "Almond Milk"
            ],
            "Bread": [
              "Bread"
            ],
            "Whole Wheat Bread": [
              "Whole Wheat Bread"
            ],
            "White Bread": [
              "White Bread"
            ],
            "Cheese": [
              "Cheese"
            ],
            "Cheddar": [
              "Cheddar"
            ],
            "Mozzarella": [
              "Mozzarella"
            ]
          }
        }
      },
      "quantity": {
        "type": "regex",
        "name": "quantity",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "regex": "/\\d+\\s*(KG|LBS)/gi"
          }
        }
      },
      "price": {
        "type": "enum",
        "name": "price",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "price": [
              "price"
            ]
          }
        }
      },
      "tax": {
        "type": "regex",
        "name": "tax",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "regex": "/tax/gi"
          }
        }
      },
      "amount": {
        "type": "regex",
        "name": "amount",
        "localeFallback": {
          "*": "en"
        },
        "locales": {
          "en": {
            "regex": "/\\$\\d+\\.\\d+/gi"
          }
        }
      }
    }
  },
  "slotManager": {},
  "responses": {},
  "actions": {},
  "utteranceDict": {
    "?": "help"
  }
}